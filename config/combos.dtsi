/*                KEY POSITIONS

  ╭────────────────────╮ ╭────────────────────╮
  │  0   1   2   3   4 │ │  5   6   7   8   9 │
  │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
  │ 20  21  22  23  24 │ │ 25  26  27  28  29 │
  ╰───────────╮ 30  31 │ │ 32  33 ╭───────────╯
              ╰────────╯ ╰────────╯            */

compatible = "zmk,combos";

#define COMBO(NAME, BINDINGS, KEYPOS, LAYERS) \
  combo_##NAME { \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    layers = <LAYERS>; \
  };

/* Brackets */
COMBO(left_brace, &kp LEFT_BRACE, 3 13, BASE BASE_IOS)
COMBO(right_brace, &kp RIGHT_BRACE, 6 16, BASE BASE_IOS)
COMBO(left_bracket, &kp LEFT_BRACKET, 2 12, BASE BASE_IOS)
COMBO(right_bracket, &kp RIGHT_BRACKET, 7 17, BASE BASE_IOS)
COMBO(left_parenthesis, &kp LEFT_PARENTHESIS, 11 21, BASE BASE_IOS)
COMBO(right_parenthesis, &kp RIGHT_PARENTHESIS, 18 28, BASE BASE_IOS)
COMBO(less_than, &kp LESS_THAN, 12 22, BASE BASE_IOS)
COMBO(greater_than, &kp GREATER_THAN, 18 28, BASE BASE_IOS)

COMBO(undo, &kp LC(Z), 20 21, BASE)
COMBO(cut, &kp LC(X), 21 23, BASE)
COMBO(copy, &kp LC(C), 21 22, BASE)
COMBO(paste, &kp LC(V), 21 22 23, BASE)
COMBO(select_all, &kp LC(A), 20 23, BASE)

COMBO(undo_ios, &kp LG(Z), 20 21, BASE_IOS)
COMBO(cut_ios, &kp LG(X), 21 23, BASE_IOS)
COMBO(copy_ios, &kp LG(C), 21 22, BASE_IOS)
COMBO(paste_ios, &kp LG(V), 21 22 23, BASE_IOS)
COMBO(select_all_ios, &kp LG(A), 20 23, BASE_IOS)

COMBO(ios_keyboard_toggle, &kp C_EJECT, 5 15, BASE_IOS)

COMBO(app1, &kp LG(T), 3 13, BASE BASE_IOS)
COMBO(app2, &kp LG(S), 2 12, BASE BASE_IOS)
COMBO(app3, &kp LG(C), 1 11, BASE BASE_IOS)
COMBO(app_overview, &kp LG(SPACE), 11 12 13, BASE BASE_IOS)
COMBO(mic_mute_left, &kp LG(BACKSLASH), 13 23, BASE)
COMBO(mic_mute_right, &kp LG(BACKSLASH), 16 26, BASE)

COMBO(reset, &reset, 4 5 14 15, BASE BASE_IOS)
COMBO(bootloader, &bootloader, 14 15 24 25, BASE BASE_IOS)
COMBO(bt1, &macro_bt1, 26 27, BASE BASE_IOS)
COMBO(bt2, &macro_bt2, 2 3, BASE BASE_IOS)
